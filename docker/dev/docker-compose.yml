version: '3.7'
networks:
  nxnestjs-network:
    ipam:
      config:
        - subnet: '172.6.0.0/16'

volumes:
  nxnestjs-postgres-volume:
    external: true

services:
  nxnestjs-postgres:
    image: endykaufman/postgres-default
    container_name: nxnestjs-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - nxnestjs-postgres-volume:/var/lib/postgresql/data
    networks:
      - nxnestjs-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}']
      interval: 5s
      timeout: 5s
      retries: 5

  nxnestjs-api:
    image: node:16-alpine
    user: ${CURRENT_UID}
    container_name: nxnestjs-api
    environment:
      - POSTGRES_HOST=nxnestjs-postgres
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@nxnestjs-postgres:${POSTGRES_PORT}/${POSTGRES_DATABASE}?schema=public
      - PORT=${PORT}
    ports:
      - ${PORT}:${PORT}
    working_dir: '/app'
    volumes:
      - ./../../:/app
    networks:
      - nxnestjs-network
    command: 'node ./dist/apps/api/main.js'
    tty: true
    depends_on:
      - nxnestjs-postgres
